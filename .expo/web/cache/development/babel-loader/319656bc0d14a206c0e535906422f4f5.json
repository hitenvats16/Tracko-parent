{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MapView, { Marker, Polygon } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport { onValue, ref } from \"firebase/database\";\nimport { db } from \"../firebase\";\nimport { Button } from \"@rneui/base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction calcDistance(lat1, lon1, lat2, lon2) {\n  var R = 6371;\n  var dLat = toRad(lat2 - lat1);\n  var dLon = toRad(lon2 - lon1);\n  var lat1 = toRad(lat1);\n  var lat2 = toRad(lat2);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n}\n\nfunction toRad(Value) {\n  return Value * Math.PI / 180;\n}\n\nexport default function MainScreen() {\n  var navigation = useNavigation();\n  var params = useRoute().params;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      distance = _useState2[0],\n      setDistance = _useState2[1];\n\n  var _useState3 = useState({\n    accuracy: 32.645999908447266,\n    altitude: 164.59999084472656,\n    altitudeAccuracy: 3.7112390995025635,\n    heading: 130.05311584472656,\n    latitude: 28.6628205,\n    longitude: 77.0464616,\n    speed: 0.4832797646522522\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      location = _useState4[0],\n      setLocation = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      markers = _useState8[0],\n      setMarkers = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pathShown = _useState10[0],\n      setShown = _useState10[1];\n\n  var _useState11 = useState({\n    accuracy: 32.645999908447266,\n    altitude: 164.59999084472656,\n    altitudeAccuracy: 3.7112390995025635,\n    heading: 130.05311584472656,\n    latitude: 28.6628205,\n    longitude: 77.0464616,\n    speed: 0.4832797646522522\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      busCoordinates = _useState12[0],\n      setCoords = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      coordArray = _useState14[0],\n      setArray = _useState14[1];\n\n  useEffect(function () {\n    var dbRef = ref(db, params.title);\n    onValue(dbRef, function (snap) {\n      setCoords(snap.val().coords);\n    });\n  }, []);\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== \"granted\")) {\n                _context.next = 7;\n                break;\n              }\n\n              ToastAndroid.showWithGravity(\"Permission to access location was denied\", ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location.coords);\n              setLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  });\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      titleAlign: \"center\",\n      title: params.title,\n      headerStyle: {\n        backgroundColor: \"#06113C\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleAlign: \"center\"\n    });\n  });\n  useEffect(function () {\n    setArray([{\n      longitude: location.longitude,\n      latitude: location.latitude\n    }, {\n      longitude: busCoordinates.longitude,\n      latitude: busCoordinates.latitude\n    }]);\n    setDistance(calcDistance(busCoordinates.latitude, busCoordinates.longitude, location.latitude, location.longitude));\n  }, [busCoordinates, location]);\n\n  if (loading) {\n    _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#06113C\"\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"white\"\n      })\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.cont,\n    children: [_jsxs(MapView, {\n      initialRegion: {\n        latitude: busCoordinates.latitude,\n        longitude: busCoordinates.longitude,\n        latitudeDelta: 0.0622,\n        longitudeDelta: 0.0121\n      },\n      style: styles.map,\n      userInterfaceStyle: \"dark\",\n      userLocationAnnotationTitle: \"Current Loaction of a parent\",\n      showsMyLocationButton: true,\n      showsCompass: true,\n      showsScale: true,\n      showsBuildings: true,\n      toolbarEnabled: true,\n      moveOnMarkerPress: true,\n      onMapLoaded: function onMapLoaded() {\n        setMarkers([_jsx(Marker, {\n          coordinate: {\n            longitude: location.longitude,\n            latitude: location.latitude\n          },\n          title: \"Parents Location\",\n          description: \"This is the live location of a parent\"\n        }, 1), _jsx(Marker, {\n          coordinate: {\n            longitude: busCoordinates.longitude,\n            latitude: busCoordinates.latitude\n          },\n          title: \"Bus Location\",\n          description: \"This is the live location of a bus via driver's phone\",\n          flat: true,\n          icon: require(\"../assets/bus.png\")\n        }, 2)]);\n      },\n      children: [markers, pathShown && _jsx(Polygon, {\n        coordinates: coordArray,\n        strokeColor: \"#06113C\",\n        strokeWidth: 1\n      })]\n    }), _jsxs(View, {\n      style: styles.speedCont,\n      children: [_jsxs(View, {\n        style: {\n          width: 100,\n          height: 100,\n          borderRadius: 50,\n          backgroundColor: \"#e1e1e1\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: \"bold\",\n            fontSize: 30,\n            color: \"#a6a6a6\"\n          },\n          children: Math.floor(busCoordinates == null ? void 0 : busCoordinates.speed)\n        }), _jsx(Text, {\n          style: {\n            fontSize: 15\n          },\n          children: \"km/h\"\n        })]\n      }), _jsxs(View, {\n        style: styles.subCont,\n        children: [_jsxs(Text, {\n          style: {\n            fontWeight: 'bold',\n            fontSize: 15\n          },\n          children: [\"Estimated Distance: \", distance.toPrecision(6), \" km\"]\n        }), _jsxs(Text, {\n          style: {\n            fontWeight: 'bold',\n            fontSize: 15\n          },\n          children: [\"Estimated Time:\", \" \", Math.floor(busCoordinates.speed) == 0 ? \"-- \" : distance / Math.floor(busCoordinates.speed) * 60, \"min\"]\n        })]\n      })]\n    }), _jsx(Button, {\n      title: \"Show Path\",\n      onPress: function onPress() {\n        return setShown(!pathShown);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  cont: {\n    backgroundColor: \"#06113C\",\n    flex: 1\n  },\n  map: {\n    flex: 1\n  },\n  speedCont: {\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    paddingVertical: 20,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  },\n  subCont: {\n    width: 250,\n    height: 100,\n    borderRadius: 10,\n    backgroundColor: \"#e1e1e1\",\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    flexDirection: 'column'\n  }\n});","map":{"version":3,"sources":["/home/hiten/Documents/Tracko-parent/screens/mainScreen.js"],"names":["useNavigation","useRoute","useEffect","useLayoutEffect","useRef","useState","MapView","Marker","Polygon","Location","onValue","ref","db","Button","calcDistance","lat1","lon1","lat2","lon2","R","dLat","toRad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","Value","PI","MainScreen","navigation","params","distance","setDistance","accuracy","altitude","altitudeAccuracy","heading","latitude","longitude","speed","location","setLocation","loading","setLoading","markers","setMarkers","pathShown","setShown","busCoordinates","setCoords","coordArray","setArray","dbRef","title","snap","val","coords","requestForegroundPermissionsAsync","status","ToastAndroid","showWithGravity","SHORT","BOTTOM","getCurrentPositionAsync","setOptions","titleAlign","headerStyle","backgroundColor","headerTintColor","headerTitleAlign","flex","justifyContent","alignItems","styles","cont","latitudeDelta","longitudeDelta","map","require","speedCont","width","height","borderRadius","fontWeight","fontSize","color","floor","subCont","toPrecision","StyleSheet","create","paddingVertical","flexDirection"],"mappings":"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","sourcesContent":["import { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  ActivityIndicator,\n  ToastAndroid,\n  Text,\n} from \"react-native\";\nimport MapView, { Marker, Polygon } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport { onValue, ref } from \"firebase/database\";\nimport { db } from \"../firebase\";\nimport { Button } from \"@rneui/base\";\n\nfunction calcDistance(lat1, lon1, lat2, lon2) {\n  var R = 6371;\n  var dLat = toRad(lat2 - lat1);\n  var dLon = toRad(lon2 - lon1);\n  var lat1 = toRad(lat1);\n  var lat2 = toRad(lat2);\n\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n}\n\nfunction toRad(Value) {\n  return (Value * Math.PI) / 180;\n}\n\nexport default function MainScreen() {\n  const navigation = useNavigation();\n  const params = useRoute().params;\n  const [distance, setDistance] = useState(0);\n  const [location, setLocation] = useState({\n    accuracy: 32.645999908447266,\n    altitude: 164.59999084472656,\n    altitudeAccuracy: 3.7112390995025635,\n    heading: 130.05311584472656,\n    latitude: 28.6628205,\n    longitude: 77.0464616,\n    speed: 0.4832797646522522,\n  });\n  const [loading, setLoading] = useState(true);\n  const [markers, setMarkers] = useState([]);\n  const [pathShown, setShown] = useState(false);\n\n  const [busCoordinates, setCoords] = useState({\n    accuracy: 32.645999908447266,\n    altitude: 164.59999084472656,\n    altitudeAccuracy: 3.7112390995025635,\n    heading: 130.05311584472656,\n    latitude: 28.6628205,\n    longitude: 77.0464616,\n    speed: 0.4832797646522522,\n  });\n\n  const [coordArray, setArray] = useState([]);\n\n  useEffect(() => {\n    const dbRef = ref(db, params.title);\n    onValue(dbRef, (snap) => {\n      setCoords(snap.val().coords);\n    });\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== \"granted\") {\n        ToastAndroid.showWithGravity(\n          \"Permission to access location was denied\",\n          ToastAndroid.SHORT,\n          ToastAndroid.BOTTOM\n        );\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location.coords);\n      setLoading(false);\n    })();\n  });\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      titleAlign: \"center\",\n      title: params.title,\n      headerStyle: {\n        backgroundColor: \"#06113C\",\n      },\n      headerTintColor: \"#fff\",\n      headerTitleAlign: \"center\",\n    });\n  });\n\n  useEffect(() => {\n    setArray([\n      {\n        longitude: location.longitude,\n        latitude: location.latitude,\n      },\n      {\n        longitude: busCoordinates.longitude,\n        latitude: busCoordinates.latitude,\n      },\n    ]);\n    setDistance(\n      calcDistance(\n        busCoordinates.latitude,\n        busCoordinates.longitude,\n        location.latitude,\n        location.longitude\n      )\n    );\n  }, [busCoordinates, location]);\n\n  if (loading) {\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#06113C\",\n      }}\n    >\n      <ActivityIndicator size={\"large\"} color={\"white\"} />\n    </View>;\n  }\n\n  return (\n    <View style={styles.cont}>\n      <MapView\n        initialRegion={{\n          latitude: busCoordinates.latitude,\n          longitude: busCoordinates.longitude,\n          latitudeDelta: 0.0622,\n          longitudeDelta: 0.0121,\n        }}\n        style={styles.map}\n        userInterfaceStyle={\"dark\"}\n        userLocationAnnotationTitle={\"Current Loaction of a parent\"}\n        showsMyLocationButton={true}\n        showsCompass={true}\n        showsScale={true}\n        showsBuildings={true}\n        toolbarEnabled={true}\n        moveOnMarkerPress={true}\n        onMapLoaded={() => {\n          setMarkers([\n            <Marker\n              coordinate={{\n                longitude: location.longitude,\n                latitude: location.latitude,\n              }}\n              title=\"Parents Location\"\n              description=\"This is the live location of a parent\"\n              key={1}\n            />,\n            <Marker\n              coordinate={{\n                longitude: busCoordinates.longitude,\n                latitude: busCoordinates.latitude,\n              }}\n              title=\"Bus Location\"\n              description=\"This is the live location of a bus via driver's phone\"\n              flat={true}\n              icon={require(\"../assets/bus.png\")}\n              key={2}\n            />,\n          ]);\n        }}\n      >\n        {markers}\n        {pathShown && (\n          <Polygon\n            coordinates={coordArray}\n            strokeColor={\"#06113C\"}\n            strokeWidth={1}\n          />\n        )}\n      </MapView>\n      <View style={styles.speedCont}>\n        <View\n          style={{\n            width: 100,\n            height: 100,\n            borderRadius: 50,\n            backgroundColor: \"#e1e1e1\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text\n            style={{\n              fontWeight: \"bold\",\n              fontSize: 30,\n              color: \"#a6a6a6\",\n            }}\n          >\n            {Math.floor(busCoordinates?.speed)}\n          </Text>\n          <Text\n            style={{\n              fontSize: 15,\n            }}\n          >\n            km/h\n          </Text>\n        </View>\n        <View style={styles.subCont}>\n          <Text style={{fontWeight: 'bold', fontSize: 15}}>Estimated Distance: {distance.toPrecision(6)} km</Text>\n          <Text style={{fontWeight: 'bold', fontSize: 15}}>\n            Estimated Time:{\" \"}\n            {Math.floor(busCoordinates.speed) == 0\n              ? \"-- \"\n              : (distance / Math.floor(busCoordinates.speed))*60}\n              min\n          </Text>\n        </View>\n      </View>\n      <Button title={\"Show Path\"} onPress={() => setShown(!pathShown)} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cont: {\n    backgroundColor: \"#06113C\",\n    flex: 1,\n  },\n  map: {\n    flex: 1,\n  },\n  speedCont: {\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    paddingVertical: 20,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  subCont: {\n    width: 250,\n    height: 100,\n    borderRadius: 10,\n    backgroundColor: \"#e1e1e1\",\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    flexDirection: 'column'\n  },\n});\n"]},"metadata":{},"sourceType":"module"}